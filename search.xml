<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>ArchLinux入门指南For OIer</title>
      <link href="/2019/03/03/intro-arch-for-oi/"/>
      <url>/2019/03/03/intro-arch-for-oi/</url>
      
        <content type="html"><![CDATA[<h1 id="前言"><a href="#前言" class="headerlink" title="前言"></a>前言</h1><p><img src="https://www.archlinux.org/static/logos/archlinux-logo-dark-90dpi.ebdee92a15b3.png" alt><br>$\color{skyblue} \text{Arch}\color{orange}\text{L}\color{black}\text{inux}$是一个非常好用<del>(可以让你天天Kernel Panic)</del>的Linux发行版，它采用滚动更新的方式,能最快得到新的$\sout{Kernel\ Panic}$软件包,适合喜欢$\sout{Kernel\ Panic}$了解$\text{\&amp;}$使用前沿技术的$\text{OIer}$.</p><h1 id="color-red-text-警告"><a href="#color-red-text-警告" class="headerlink" title="$\color{red} \text{警告}$"></a>$\color{red} \text{警告}$</h1><p>$\color{red} \text{本文仅适合主板适配UEFI方式引导并运行在x86_64平台上的PC,不为使用其他奇葩键盘的用户做出适配}$</p><hr><h2 id="如何安装-text-Arch-Linux"><a href="#如何安装-text-Arch-Linux" class="headerlink" title="如何安装$\text{Arch\ Linux}$"></a>如何安装$\text{Arch\ Linux}$</h2><h6 id="注意-下面将使用”根分区”代指-text-rootfs-”-text-home-”代指家目录-”-text-swap-”代指交换空间"><a href="#注意-下面将使用”根分区”代指-text-rootfs-”-text-home-”代指家目录-”-text-swap-”代指交换空间" class="headerlink" title="注意:下面将使用”根分区”代指$\text{rootfs}$,”$\text{home}$”代指家目录,”$\text{swap}$”代指交换空间"></a>注意:下面将使用”根分区”代指$\text{rootfs}$,”$\text{home}$”代指家目录,”$\text{swap}$”代指交换空间</h6><h3 id="Before-Installing"><a href="#Before-Installing" class="headerlink" title="Before Installing"></a>Before Installing</h3><p>在安装之前,请确保你的$\text{PC}$中有足够的硬盘空间存放$\text{Arch\ Linux}$的根目录,并划分出根分区,建议划出大于等于你的$\text{PC}$的运行内存的$\text{swap}$分区,分配出$\text{50MB}$到$\text{200MB}$不等的$\text{ESP}$分区(如果$\text{Windows}$已经创建了可以使用$]\text{Windows}$创建的.以上操作建议在安装之前完成(完成之后可以忽略文中分区部分).</p><h3 id="Start-Installing"><a href="#Start-Installing" class="headerlink" title="Start Installing"></a>Start Installing</h3><p>$\text{Arch\ Linux}$以滚动更新的形式发布,它能给用户提供较为基础和可自定义的Linux环境,并且始终让用户通过滚动更新获得最新的软件包.它使用名为$pacman$(Package Manager<del>吃豆人</del>)软件包管理器来管理软件包,只需一个命令，整个操作系统中所有的软件包都会开始更新到最新的版本(然而这也有一个问题,那就是更新某些系统组件会带来一些内核级别的错误,让你的$\text{Arch\ Linux}$瞬间$\text{Kernel\ Panic}$),正是因为这一点,我们可以使用$\text{Arch\ Linux}$获得最有效率<del>逼格</del>的$\text{Linux}$体验.因为滚动更新的特性,$\text{Arch\ Linux}$的安装$\text{ISO}$也采用了快速更新发布,每月更新一次.对于中国大陆的用户,你可以在<a href="https://mirrors.tuna.tsinghua.edu.cn" target="_blank" rel="noopener">$\text{tuna}$</a>源下载到$\text{Arch\ Linux}$的安装$\text{ISO}$(当然，在其他途径下载仍然可以)</p><p>在下载好$\text{ISO}$之后,你需要一个$\text{USB}$闪存盘或者光盘,在$\text{Windows}$环境下,你可以使用$\text{Etcher}$或$\text{Rufus}$来将镜像写入你的$\text{U}$盘,使用$\text{Windows}$光盘刻录机刻录到光盘.在$Linux$环境下,你可以使用$\text{dd}$命令或者$\text{Etcher}$.</p><p>关于$\text{dd}$,你可以这样:<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dd if=$你的文件名 of=/dev/sdX</span><br></pre></td></tr></table></figure></p><p>比如我要将该目录下的test.iso写入/dev/sdb就输入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dd if=test.iso of=/dev/sdb</span><br></pre></td></tr></table></figure></p><p>甚至可以<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo dd if=/dev/sdX of=backup.iso</span><br></pre></td></tr></table></figure></p><p>来备份磁盘中的数据.</p><p>准备好安装盘之后,插入电脑,在$\text{BIOS}$中选择引导你的启动盘(以$\text{UEFI}$形式),在看到$\text{SysLinux}$界面之后选择第一项.</p><p>接下来你就进入了$\text{Arch\ Linux\ ISO}$的界面,这个$\text{ISO}$默认装好了$\text{zsh}$以及在安装过程中可能需要的软件.</p><p>现在你需要链接网络,如果你使用的是$\text{Wi-Fi}$网卡,请键入$\text{wifi-menu}$进行链接,有线网卡会自动完成链接(对于使用其他<del>奇奇怪怪</del>链接方式的同学,可以查询<a href="https://wiki.archlinux.org/index.php/Network_configuration_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87" target="_blank" rel="noopener">$\text{ArchWiki}$</a>).</p><p>测试网络链接是否建立,键入<figure class="highlight plain"><figcaption><span>-c 4 luogu.org&#125;$```~~(你谷管理员不要打我)~~</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">键入```$\text&#123;timedatectl set-ntp true&#125;$```同步时间为$\text&#123;UTC&#125;$时间(如果你的电脑上有$\text&#123;Windows&#125;$需要在$\text&#123;Windows&#125;$内部设置其使用$\text&#123;UTC&#125;$时间(以免你进了$\text&#123;Windows&#125;$又把时间同步回去或显示$\text&#123;UTC&#125;$时间而不是北京时间)</span><br><span class="line"></span><br><span class="line">接下来使用友好的$\text&#123;nano&#125;$编辑器~~($\sout&#123;Vi/Vim&#125;$党自觉就好,不要说出来)~~,键入```nano /etc/pacman.d/mirrorlist```,在文件的最顶端添加```Server = https://mirrors.tuna.tsinghua.edu.cn/archlinux/$repo/os/$arch```$\text&#123;Ctrl+O&#125;$加回车保存,$\text&#123;Ctrl-X&#125;$退出</span><br><span class="line"></span><br><span class="line">键入$\text&#123;cfdisk&#125;$+空格+目标磁盘(形如$\text&#123;/dev/sdX&#125;$)并回车,进行分区操作,完毕之后选择$\text&#123;write&#125;$保存,并选择$\text&#123;quit&#125;$退出.</span><br><span class="line"></span><br><span class="line">分区完成之后,格式化你的分区.先用```$\text&#123;fdisk -l&#125;$```命令查看存在的分区,找到你分出的根目录分区,$\text&#123;swap&#125;$分区,$\text&#123;home&#125;$分区等你需要的分区.($\color&#123;red&#125; \text&#123;警告:如果使用的ESP分区不是刚刚创建的,请不要格式化ESP分区&#125;$)</span><br><span class="line"></span><br><span class="line">对于根分区,$\text&#123;home&#125;$分区等分区,使用$\text&#123;mkfs.ext4&#125;$命令格式化.</span><br><span class="line"></span><br><span class="line">对于$\text&#123;ESP&#125;$分区,格式化之前请阅读上方红字,确保安全之后,用$\text&#123;mkfs.fat&#125;$命令分区以获得较好的兼容性.</span><br><span class="line"></span><br><span class="line">对于$\text&#123;swap&#125;$分区,使用$\text&#123;mkswap&#125;$命令格式化.</span><br><span class="line"></span><br><span class="line">### $\text&#123;Tips:&#125;$有需要的用户可以增加swap大小并给根目录下的某些目录分配分区</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">做好了上述准备之后,挂载分区到相应的位置</span><br><span class="line"></span><br><span class="line">对于存放文件的分区,这里以根目录分区为例子,挂载在相应的位置</span><br></pre></td></tr></table></figure></p><p>mount /dev/sdXx /mnt<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">如果为$\text&#123;home&#125;$目录或其他根目录下的目录创建了分区,可以使用如下命令(以$\text&#123;home&#125;$目录为例子)</span><br></pre></td></tr></table></figure></p><p>mkdir /mnt/home<br>mount /dev/sdXx /mnt/home<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对于$\text&#123;ESP&#125;$分区,使用如下命令挂载</span><br></pre></td></tr></table></figure></p><p>mkdir -p /mnt/boot/EFI<br>mount /dev/sdXx /mnt/boot/EFI<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对于$\text&#123;swap&#125;$分区,使用如下命令挂载</span><br></pre></td></tr></table></figure></p><p>swapon /dev/sdXx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">最后开始基础组软件安装</span><br></pre></td></tr></table></figure></p><p>pacstrap /mnt base<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">安装过程保持联网,安装完成以后,保存分区表</span><br></pre></td></tr></table></figure></p><p>genfstab -U /mnt &gt;&gt; /mnt/etc/fstab<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">之后就可以通过$\text&#123;arch-chroot&#125;$进入安装好的系统继续配置了.</span><br><span class="line"></span><br><span class="line">## 配置$\text&#123;ArchLinux&#125;$</span><br><span class="line"></span><br><span class="line">刚才我们安装了一个**只有$\text&#123;base&#125;$**组软件包的最简化的$\text&#123;ArchLinux&#125;$,几乎不具备任何工具.也不能用来开发,正因为如此,我们可以对这个系统进行高度定制,使其适合$\text&#123;OIer&#125;$使用,用于学习与开发.</span><br><span class="line"></span><br><span class="line">首先设置时区,对于在座各位中国的用户,使用中国的时间,输入:</span><br></pre></td></tr></table></figure></p><p>ln -sf /usr/share/zoneinfo/Asia/Shanghai /etc/localtime<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同时与网络时间同步硬件时间</span><br></pre></td></tr></table></figure></p><p>hwclock –systohc<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">接下来设置语言</span><br><span class="line">对于~~能看得懂这篇文章的~~你们而言,一般来说设置为中文+英文是坠吼的.所以...</span><br></pre></td></tr></table></figure></p><p>nano /etc/locale.gen<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">编辑locale.gen文件,按下$F6$分别搜索$\text&#123;en\_US.UTF-8 UTF-8&#125;$与$\text&#123;zh\_CN.UTF-8 UTF-8&#125;$取消那两行的注释,不保留前面的空格然后$\text&#123;Ctrl+O&#125;$加回车保存,$\text&#123;Ctrl-X&#125;$退出.</span><br><span class="line">完成编辑之后,使用</span><br></pre></td></tr></table></figure></p><p>locale-gen<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">生成$\text&#123;locale&#125;$</span><br><span class="line"></span><br><span class="line">之后输入</span><br></pre></td></tr></table></figure></p><p>echo ‘LANG=zh_CN.UTF-8’  &gt; /etc/locale.conf<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">或者使用$\text&#123;nano&#125;$将```LANG=zh_CN.UTF-8```加入文件```/etc/locale.conf</span><br></pre></td></tr></table></figure></p><p>在这之后,仿照上面的方式,向<figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">```</span><br><span class="line">#&lt;ip-address&gt;&lt;hostname.domain.org&gt;&lt;hostname&gt;</span><br><span class="line">127.0.0.1localhost.localdomainlocalhost</span><br><span class="line">::1localhost.localdomainlocalhost</span><br><span class="line">127.0.1.1&lt;主机名&gt;.localdomain&lt;主机名&gt;</span><br></pre></td></tr></table></figure></p><p>之后,修改$\text{pacman}$软件源<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nano /etc/pacman.conf</span><br></pre></td></tr></table></figure></p><p>解除对$\text{multilib}$的注释,在文件末尾加入<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[archlinuxcn]</span><br><span class="line">Server = https://mirrors.tuna.tsinghua.edu.cn/archlinuxcn/$arch</span><br></pre></td></tr></table></figure></p><p>然后<figure class="highlight plain"><figcaption><span>-Sy archlinuxcn-keyring```</span></figcaption><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line">之后你就可以```pacman -S yaourt```打开新世界啦!</span><br><span class="line"></span><br><span class="line">对于大部分用户,都需要一些基本开发环境与工具,所以我们可以</span><br></pre></td></tr></table></figure></p><p>yaourt -S base-devel zsh<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**配置网络环境是重中之重**(下面注意大小写)</span><br></pre></td></tr></table></figure></p><p>yaourt -S networkmanager<br>systemctl enable NetworkManager<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">并安装重要的引导程序</span><br></pre></td></tr></table></figure></p><p>yaourt -S dosfstools grub efibootmgr<br>grub-install –target=x86_64-efi –efi-directory=/boot/EFI –bootloader-id=GRUB<br>grub-mkconfig -o /boot/grub/grub.cfg<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">之后安装图形环境</span><br><span class="line"></span><br><span class="line">对于显卡驱动(恬不知耻地引用):</span><br></pre></td></tr></table></figure></p><p>xf86-video-vesa 是开源的显卡驱动实现，提供了最基本的显示功能。<br>因特尔显卡应当是开箱即用的，不需要安装显卡驱动，但通常建议安装 mesa 以支持 3D 加速。如果需要 Vulkan 支持（需 Ivy Bridge 及更新架构），须安装 valkan-intel。如果需要支持 Xorg 2D 加速，须安装 xf86-video-intel。<br>然而需要注意的是，安装 xf86-video-intel 与否需要更多斟酌，详见此处。<br>英伟达显卡驱动有第三方的开源实现 xf86-video-nouveau 和英伟达官方私有驱动 nvidia 系列。<br>对于 GeForce 600 及更新系列（除了 610, 620, 625, 705, 800A 和其他低端重贴牌显卡）请安装 nvidia<br>对于 2010 至 2011 年间 GeForce 400/500 请安装 nvidia-390xx<br>对于 2006 至 2010 年间 GeForce 8000/9000、ION 和 100-300 系列 [NV5x, NV8x, NV9x and NVAx] 请安装 nvidia-340xx<br>更早的显卡系列驱动请查阅此处<br>AMD/ATI 显卡驱动原先有开源实现 xf86-video-ati 及闭源实现 AMD Catalyst。而AMD 自统一开源驱动和闭源驱动后又发布了新的开源实现 xf86-video-amdgpu 和闭源实现 AMDGPU PRO。其中 AMD Catalyst 及 AMDGPU PRO 不被 Arch Linux 官方所支持（未收录于官方软件仓库）。<br>xf86-video-amdgpu 支持 GCN 1、GCN 2、GCN 3、GCN 4 及更新架构的显卡。<br>AMDGPU PRO 支持 GCN 3、GCN 4 及更新架构的显卡。<br>xf86-video-ati 支持 X1000 及更早的显卡、TeraScale 1、TeraScale 2、TeraScale 3、GCN 1、GCN 2 架构的显卡。<br>AMD Catalyst 支持 TeraScale 2、TeraScale 3、GCN 1、GCN 2、GCN 3 架构的显卡。<br>AMD Catalyst Legacy 支持 TeraScale 1 架构的显卡。<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">之后安装图形支持</span><br></pre></td></tr></table></figure></p><p>yaourt -S xorg<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">还有窗口管理器</span><br></pre></td></tr></table></figure></p><p>yaourt -S lightdm<br>systemctl enable lightdm<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">关于桌面环境,我推荐$\text&#123;Deepin&#125;$的桌面环境,对新手友好且流畅,故这里不再介绍$\text&#123;KDE&#125;$,$\text&#123;Gnome&#125;$,$\text&#123;xfce&#125;$等其他桌面环境</span><br></pre></td></tr></table></figure></p><p>yaourt -S deepin deepin-extra wqy-microhei ttf-dejavu<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">在这之后呢,添加你的日常用户,用你自己的用户名(不能首字母大写)替换下面的$\text&#123;USER&#125;$($\text&#123;root&#125;$用户日常用至少我做不到$QwQ$)</span><br></pre></td></tr></table></figure></p><p>useradd -m -g users -s /bin/bash USER<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">并使用$visudo$给你的用户赋予$\text&#123;sudo&#125;$权限~~($\sout&#123;Vim&#125;$从入门到精通)~~</span><br><span class="line">接下来打出漂亮的$exit$+回车,接着来一个$reboot$,进入你完美的新系统吧!</span><br><span class="line"></span><br><span class="line">## More</span><br><span class="line">碍于篇幅所限~~(我有一个绝妙的想法,这里的位置太小...)~~,我不能介绍过多的美化+提升方法,这里介绍一些简单好用重要的</span><br><span class="line">首先安装~~我觉得~~每个$\text&#123;OIer&#125;$都会需要的一些软件(下面操作需要$\text&#123;root&#125;$权限)</span><br></pre></td></tr></table></figure></p><p>yaourt -S python python-pip gvim visual-studio-code-bin atom deepin-wine deepin.com.qq.office deepin.com.qq.thunderspeed kmscon powerline powerline-fonts plymouth unrar google-chrome<br>sh -c “$(curl -fsSL <a href="https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;" target="_blank" rel="noopener">https://raw.github.com/robbyrussell/oh-my-zsh/master/tools/install.sh)&quot;</a><br>ln -s /usr/lib/systemd/system/kmsconvt\@.service /etc/systemd/system/autovt\@.service</p><h1 id="在-etc-fonts-conf-d-99-kmscon-conf输入下列信息-这条不输"><a href="#在-etc-fonts-conf-d-99-kmscon-conf输入下列信息-这条不输" class="headerlink" title="在/etc/fonts/conf.d/99-kmscon.conf输入下列信息,这条不输"></a>在/etc/fonts/conf.d/99-kmscon.conf输入下列信息,这条不输</h1><p>&lt;?xml version=”1.0”?&gt;<br>&lt;!DOCTYPE fontconfig SYSTEM “fonts.dtd”&gt;</p><p><fontconfig></fontconfig></p><p><match><br>        <test name="family"><string>monospace</string></test><br>        <edit name="family" mode="prepend" binding="strong"><br>                <string>DejaVu Sans Mono</string><br>                <string>WenQuanYi Micro Hei Mono</string><br>        </edit><br></match><br><br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">同时安装输入法</span><br></pre></td></tr></table></figure></p><p>yaourt -S fcitx-im fcitx-sogoupinyin<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">配置输入法</span><br></pre></td></tr></table></figure></p><p>nano /home/&lt;你的用户名&gt;/.pam_environment<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">加入以下内容</span><br></pre></td></tr></table></figure></p><p>GTK_IM_MODULE=fcitx<br>QT_IM_MODULE=fcitx<br>XMODIFIERS=@im=fcitx<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">然后记住,系统更新使用</span><br></pre></td></tr></table></figure></p><p>yaourt -Syu<br><code>`</code><br>即可!</p><h1 id="享受你的-text-ArchLinux-吧"><a href="#享受你的-text-ArchLinux-吧" class="headerlink" title="享受你的$\text{ArchLinux}$吧!"></a>享受你的$\text{ArchLinux}$吧!</h1><hr><h1 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h1><p>关于上面的安装指南,很多人可能已经非常熟悉,可能会觉得<del>垃圾</del>多余,但是现有的一些小白都习惯于$\text{Ubuntu}$,$\text{Debian}$系$\color{orange}\text{L}\color{blue}\text{inux}$的图形化傻瓜安装,而且教会这些小白安装并不能将他们引入$\text{ArchLinux}$的殿堂,因为在<del>简单</del>的安装之后,有更难的解决系统与硬件的兼容问题,$\text{tty}$对$\text{UTF-8}$的适配等等,要实现真正的客制化操作系统,需要系统的介绍.因此,我在这里从系统的安装开始讲起.</p><p>接下来,我会持续更新更多关于$\text{ArchLinux}$的内容,包括美化,衍生发行版推荐$\text{Manjaro}$,$\text{BlackArch}$,$\text{Antergos}$等等,并会分享更多好的$\text{Tips}$,诸如配置好用的开发环境等等.另外,如果有问题请在$\text{Luogu}$留下你的评论,我会尽量解决大家的问题.敬请期待!</p>]]></content>
      
      
      <categories>
          
          <category> 操作系统 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> ArchLinux </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Luogu P3258 [JLOI2014]松鼠的新家</title>
      <link href="/2019/03/03/Luogu-P3258-%5BJLOI2014%5D%E6%9D%BE%E9%BC%A0%E7%9A%84%E6%96%B0%E5%AE%B6/"/>
      <url>/2019/03/03/Luogu-P3258-%5BJLOI2014%5D%E6%9D%BE%E9%BC%A0%E7%9A%84%E6%96%B0%E5%AE%B6/</url>
      
        <content type="html"><![CDATA[<p>对于这道题，题意已经有先辈分析过了，这里不多作赘述。</p><p>写法主要有两种：</p><ul><li><p>求LCA（倍增）+树上差分</p></li><li><p>树链剖分挂线段树</p></li></ul><p>对于这两种写法，树上差分算是技巧性的东西了，而树链剖分基本上是裸的算法</p><p><del>当然，树剖是省选内容</del></p><h1 id="树上差分"><a href="#树上差分" class="headerlink" title="树上差分"></a>树上差分</h1><p>首先介绍LCA+树上差分</p><p>我们说在它树上运动走的肯定是最短路，于是过程就可以简化成</p><p>起点-&gt;LCA-&gt;终点</p><p>那么最朴素的思路肯定是把这条路径上的所有点权值+1</p><p><del>但是会TLE</del></p><p>那么如何优化呢？</p><p>记得在写树状数组-2的时候，我们应用了一种叫差分的思路，通过O(1)的操作维护一段区间。</p><p>那么我们可以仿照这个思路，把树看作若干根交叉在一起的链</p><p>于是我们就可以大胆的把起点-&gt;LCA，终点-&gt;LCA看作两个区间，给区间左端点分别+1，右端点分别-1（LCA就-2）</p><p>这里有一个遗留问题：为什么不能给终点-1，这个问题我希望读者自己思考。</p><p><del>大家可以试试把菊花树拆成链来思考</del></p><h1 id="树链剖分"><a href="#树链剖分" class="headerlink" title="树链剖分"></a>树链剖分</h1><p><del>这就很裸了嘛</del></p><p>思路，按照树剖的思想将树拆分成若干条重链，在每个重链开头建立一棵线段树维护链上节点权值，求LCA的时候直接修改就好了嘛。</p><p>为了详细我还是讲一下。</p><p>一棵树有多个节点多条边，我们把它拆成几条重链。拆完之后，一个节点要么是重链开端要么是重链上的非起点节点，并且除了根节点，所有重链开端都会与一条重链相连（挂在重链上）</p><p>那么我们求LCA的时候，分别从两个节点出发，往上跳到节点开头，维护值，如果不是LCA就跳到挂在的重链上重复上述过程就好啦。</p><p><del>其实还是很好想的嘛</del></p><p>代码之后会给</p>]]></content>
      
      
      <categories>
          
          <category> 算法-基础树上问题 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> LCA </tag>
            
            <tag> 倍增 </tag>
            
            <tag> 树链剖分 </tag>
            
            <tag> 树上差分 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Luogu P1379 八数码难题</title>
      <link href="/2018/07/20/Luogu-P1379-%E5%85%AB%E6%95%B0%E7%A0%81%E9%9A%BE%E9%A2%98/"/>
      <url>/2018/07/20/Luogu-P1379-%E5%85%AB%E6%95%B0%E7%A0%81%E9%9A%BE%E9%A2%98/</url>
      
        <content type="html"><![CDATA[<p>原题：<a href="https://www.luogu.org/problemnew/show/P1379" target="_blank" rel="noopener">Luogu 1379</a></p><p>蒟蒻第一次题解</p><hr><p>这道题如果不想TLE和MLE的话，你需要判重。</p><p>所以有两种思路</p><p>因为这是一个九个点的矩阵，矩阵又涉及到0~8九个数字的可能</p><p>所以我们有了最最暴力的思路————</p><p><del><strong>大力数组出奇迹</strong></del></p><p>问题是，我们建一个到最大九位数排列可能性的数组，它除了包括你的九个数字还带上了一堆东西————1~最小可能性！</p><p>所以，我们为了避免这种可能，做出了比暴力稍微好一点的思路。</p><h1 id="九维数组"><a href="#九维数组" class="headerlink" title="九维数组"></a>九维数组</h1><p>代码如下</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="keyword">bool</span> bmap[<span class="number">9</span>][<span class="number">9</span>][<span class="number">9</span>][<span class="number">9</span>][<span class="number">9</span>][<span class="number">9</span>][<span class="number">9</span>][<span class="number">9</span>][<span class="number">9</span>];</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> state[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">    <span class="keyword">int</span> x0,y0;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">op</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i2=<span class="number">0</span>; i2&lt;<span class="number">3</span>; i2++) &#123;</span><br><span class="line">                ans+=state[i][i2];</span><br><span class="line">                ans*=<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans/=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">csh</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i2=<span class="number">0</span>; i2&lt;<span class="number">3</span>; i2++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(state[i][i2]==<span class="number">0</span>) &#123;</span><br><span class="line">                    x0=i;</span><br><span class="line">                    y0=i2;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mov</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=state[x][y];</span><br><span class="line">        <span class="keyword">int</span> b=state[x0][y0];</span><br><span class="line">        state[x][y]=b;</span><br><span class="line">        state[x0][y0]=a;</span><br><span class="line">        csh();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">check</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">        <span class="keyword">if</span>(bmap[state[<span class="number">0</span>][<span class="number">0</span>]][state[<span class="number">0</span>][<span class="number">1</span>]][state[<span class="number">0</span>][<span class="number">2</span>]][state[<span class="number">1</span>][<span class="number">0</span>]][state[<span class="number">1</span>][<span class="number">1</span>]][state[<span class="number">1</span>][<span class="number">3</span>]][state[<span class="number">2</span>][<span class="number">0</span>]][state[<span class="number">2</span>][<span class="number">1</span>]][state[<span class="number">2</span>][<span class="number">2</span>]]==<span class="literal">true</span>)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">bool</span> <span class="title">res</span><span class="params">(<span class="keyword">void</span>)</span></span>&#123;</span><br><span class="line">        bmap[state[<span class="number">0</span>][<span class="number">0</span>]][state[<span class="number">0</span>][<span class="number">1</span>]][state[<span class="number">0</span>][<span class="number">2</span>]][state[<span class="number">1</span>][<span class="number">0</span>]][state[<span class="number">1</span>][<span class="number">1</span>]][state[<span class="number">1</span>][<span class="number">3</span>]][state[<span class="number">2</span>][<span class="number">0</span>]][state[<span class="number">2</span>][<span class="number">1</span>]][state[<span class="number">2</span>][<span class="number">2</span>]]=<span class="literal">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">node start,father,son;</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i2=<span class="number">0</span>; i2&lt;<span class="number">3</span>; i2++) &#123;</span><br><span class="line">            start.state[i][i2]=getchar()-<span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    start.csh();</span><br><span class="line">    start.res();</span><br><span class="line">    start.step=<span class="number">0</span>;</span><br><span class="line">    q.push(start);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        father=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        for(int i=0; i&lt;3; i++) &#123;</span></span><br><span class="line"><span class="comment">            for(int i2=0; i2&lt;3; i2++) &#123;</span></span><br><span class="line"><span class="comment">                cout&lt;&lt;father.state[i][i2];</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            cout&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        cout&lt;&lt;"x:"&lt;&lt;father.x0&lt;&lt;" y:"&lt;&lt;father.y0&lt;&lt;" step:"&lt;&lt;father.step&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">        cout&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">        //system("pause");*/</span></span><br><span class="line">        <span class="keyword">if</span>(father.op()==<span class="number">123804765</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;father.step;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        son=father;</span><br><span class="line">        son.step++;</span><br><span class="line">        <span class="keyword">if</span>(father.x0!=<span class="number">0</span>) &#123;</span><br><span class="line">            son.mov(father.x0<span class="number">-1</span>,father.y0);</span><br><span class="line">            <span class="keyword">if</span>(son.check()!=<span class="literal">true</span>) &#123;</span><br><span class="line">                son.res();</span><br><span class="line">                q.push(son);</span><br><span class="line">            &#125;</span><br><span class="line">            son=father;son.step++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(father.x0!=<span class="number">2</span>) &#123;</span><br><span class="line">            son.mov(father.x0+<span class="number">1</span>,father.y0);</span><br><span class="line">            <span class="keyword">if</span>(son.check()!=<span class="literal">true</span>) &#123;</span><br><span class="line">                son.res();</span><br><span class="line">                q.push(son);</span><br><span class="line">            &#125;</span><br><span class="line">            son=father;son.step++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(father.y0!=<span class="number">0</span>)&#123;</span><br><span class="line">            son.mov(father.x0,father.y0<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">if</span>(son.check()!=<span class="literal">true</span>) &#123;</span><br><span class="line">                son.res();</span><br><span class="line">                    q.push(son);</span><br><span class="line">            &#125;</span><br><span class="line">            son=father;son.step++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(father.y0!=<span class="number">2</span>)&#123;</span><br><span class="line">            son.mov(father.x0,father.y0+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(son.check()!=<span class="literal">true</span>) &#123;</span><br><span class="line">                son.res();</span><br><span class="line">                q.push(son);</span><br><span class="line">            &#125;</span><br><span class="line">            son=father;son.step++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>有的人说，<del>这么多函数判重，我懒得写啊</del></p><p>所以我们有了最新操作————</p><h1 id="std-map"><a href="#std-map" class="headerlink" title="std::map"></a>std::map</h1><hr><p>那么bb了这么久，你有什么好东西没？<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="meta-keyword">include</span><span class="meta-string">&lt;bits/stdc++.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> <span class="built_in">std</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">node</span> &#123;</span></span><br><span class="line">    <span class="keyword">int</span> state[<span class="number">3</span>][<span class="number">3</span>];</span><br><span class="line">    <span class="keyword">int</span> step;</span><br><span class="line">    <span class="keyword">int</span> x0,y0;</span><br><span class="line">    <span class="function"><span class="keyword">int</span> <span class="title">op</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> ans=<span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i2=<span class="number">0</span>; i2&lt;<span class="number">3</span>; i2++) &#123;</span><br><span class="line">                ans+=state[i][i2];</span><br><span class="line">                ans*=<span class="number">10</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        ans/=<span class="number">10</span>;</span><br><span class="line">        <span class="keyword">return</span> ans;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">csh</span><span class="params">(<span class="keyword">void</span>)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++) &#123;</span><br><span class="line">            <span class="keyword">for</span>(<span class="keyword">int</span> i2=<span class="number">0</span>; i2&lt;<span class="number">3</span>; i2++) &#123;</span><br><span class="line">                <span class="keyword">if</span>(state[i][i2]==<span class="number">0</span>) &#123;</span><br><span class="line">                    x0=i;</span><br><span class="line">                    y0=i2;</span><br><span class="line">                    <span class="keyword">return</span>;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="function"><span class="keyword">void</span> <span class="title">mov</span><span class="params">(<span class="keyword">int</span> x,<span class="keyword">int</span> y)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">int</span> a=state[x][y];</span><br><span class="line">        <span class="keyword">int</span> b=state[x0][y0];</span><br><span class="line">        state[x][y]=b;</span><br><span class="line">        state[x0][y0]=a;</span><br><span class="line">        csh();</span><br><span class="line">        <span class="keyword">return</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;;</span><br><span class="line">node start,father,son;</span><br><span class="line"><span class="built_in">map</span>&lt;<span class="keyword">int</span>,<span class="keyword">bool</span>&gt; check;</span><br><span class="line"><span class="built_in">queue</span>&lt;node&gt; q;</span><br><span class="line"><span class="function"><span class="keyword">bool</span> <span class="title">checkm</span><span class="params">(node s)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(check[s.op()]==<span class="literal">true</span>)<span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="keyword">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">for</span>(<span class="keyword">int</span> i=<span class="number">0</span>; i&lt;<span class="number">3</span>; i++) &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="keyword">int</span> i2=<span class="number">0</span>; i2&lt;<span class="number">3</span>; i2++) &#123;</span><br><span class="line">            start.state[i][i2]=getchar()-<span class="string">'0'</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    start.csh();</span><br><span class="line">    check[start.op()]=<span class="literal">true</span>;</span><br><span class="line">    start.step=<span class="number">0</span>;</span><br><span class="line">    q.push(start);</span><br><span class="line">    <span class="keyword">while</span>(!q.empty()) &#123;</span><br><span class="line">        father=q.front();</span><br><span class="line">        q.pop();</span><br><span class="line">        <span class="comment">/*</span></span><br><span class="line"><span class="comment">        for(int i=0; i&lt;3; i++) &#123;</span></span><br><span class="line"><span class="comment">            for(int i2=0; i2&lt;3; i2++) &#123;</span></span><br><span class="line"><span class="comment">                cout&lt;&lt;father.state[i][i2];</span></span><br><span class="line"><span class="comment">            &#125;</span></span><br><span class="line"><span class="comment">            cout&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">        &#125;</span></span><br><span class="line"><span class="comment">        cout&lt;&lt;"x:"&lt;&lt;father.x0&lt;&lt;" y:"&lt;&lt;father.y0&lt;&lt;" step:"&lt;&lt;father.step&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">        cout&lt;&lt;endl;</span></span><br><span class="line"><span class="comment">        //system("pause");*/</span></span><br><span class="line">        <span class="keyword">if</span>(father.op()==<span class="number">123804765</span>) &#123;</span><br><span class="line">            <span class="built_in">cout</span>&lt;&lt;father.step;</span><br><span class="line">            <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        son=father;</span><br><span class="line">        son.step++;</span><br><span class="line">        <span class="keyword">if</span>(father.x0!=<span class="number">0</span>) &#123;</span><br><span class="line">            son.mov(father.x0<span class="number">-1</span>,father.y0);</span><br><span class="line">            <span class="keyword">if</span>(check[son.op()]!=<span class="literal">true</span>) &#123;</span><br><span class="line">                check[son.op()]=<span class="literal">true</span>;</span><br><span class="line">                q.push(son);</span><br><span class="line">            &#125;</span><br><span class="line">            son=father;son.step++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(father.x0!=<span class="number">2</span>) &#123;</span><br><span class="line">            son.mov(father.x0+<span class="number">1</span>,father.y0);</span><br><span class="line">            <span class="keyword">if</span>(check[son.op()]!=<span class="literal">true</span>) &#123;</span><br><span class="line">                check[son.op()]=<span class="literal">true</span>;</span><br><span class="line">                q.push(son);</span><br><span class="line">            &#125;</span><br><span class="line">            son=father;son.step++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(father.y0!=<span class="number">0</span>)&#123;</span><br><span class="line">            son.mov(father.x0,father.y0<span class="number">-1</span>);</span><br><span class="line">            <span class="keyword">if</span>(check[son.op()]!=<span class="literal">true</span>) &#123;</span><br><span class="line">                check[son.op()]=<span class="literal">true</span>;</span><br><span class="line">                    q.push(son);</span><br><span class="line">            &#125;</span><br><span class="line">            son=father;son.step++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(father.y0!=<span class="number">2</span>)&#123;</span><br><span class="line">            son.mov(father.x0,father.y0+<span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(check[son.op()]!=<span class="literal">true</span>) &#123;</span><br><span class="line">                check[son.op()]=<span class="literal">true</span>;</span><br><span class="line">                q.push(son);</span><br><span class="line">            &#125;</span><br><span class="line">            son=father;son.step++;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>]]></content>
      
      
      <categories>
          
          <category> 算法-基础搜索 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 暴力搜索 </tag>
            
            <tag> 状态压缩 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
